version: "3.8"

services:
  db: 
    image: mysql:8.0.28-oracle
    container_name: mysql
    restart: always
    tty: true
    stdin_open: true
    # volumes:
    #   - ./data:/var/lib/mysql
    ports:
      - 3307:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci
    healthcheck:
      test: ["CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$MYSQL_ROOT_PASSWORD' ]
      interval: 1s
      retries: 120

  express:
    depends_on:
      mosquitto:
        condition: service_healthy
      db: 
        condition: service_healthy
    image: node:16.14.2-alpine3.15
    container_name: express
    # restart: always
    tty: true
    volumes:
      - ./backend:/workspace
    working_dir: /workspace
    stdin_open: true
    ports:
      - "3000:3000"
    environment:
      DB_HOST: db
      DB_DATABASE: ${MYSQL_DATABASE}
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      PUBLIC_URL: ${EXPRESS_PUBLIC_URL}
      PORT: ${EXPRESS_PORT}
      SALT_ROUND: ${SALT_ROUND}
      LINE_CHANNEL_ACCESS_TOKEN: ${LINE_CHANNEL_ACCESS_TOKEN}
      LINE_CHANNEL_SECRET: ${LINE_CHANNEL_SECRET}
      JWT_SECRET: ${JWT_SECRET}
      MQTT_HOST: mosquitto
      MQTT_PORT: ${MQTT_PORT}
      MQTT_USERNAME: ${MQTT_USERNAME}
      MQTT_PASSWORD: ${MQTT_PASSWORD}
    command: sh -c "npm install && npm run db:migrate ; npm run db:dev:seed ; npm start"
    # command: sh -c "npm install && npm run db:migrate && npm run db:dev:seed && tail -f"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:3000/api/seatsInfo || exit 1
      interval: 10s
      retries: 10
      start_period: 60s

  drawer:
    depends_on:
      express:
        condition: service_healthy
    image: python:3.10.4-slim
    container_name: drawer
    # restart: always
    tty: true
    working_dir: /workspace
    volumes:
      - ./drawer/requirements.txt:/workspace/requirements.txt
      - ./drawer/src:/workspace/src
      - ./backend/public:/workspace/public
      - ./backend/private:/workspace/private
    stdin_open: true
    environment: 
      EXPRESS_SERVER: express
      EXPRESS_PORT: ${EXPRESS_PORT}
    # command: sh -c "pip install -r requirements.txt && tail -f"
    command: sh -c "pip install -r requirements.txt && python src/draw.py"

  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto:2.0.14-openssl
    restart: always
    tty: true
    stdin_open: true
    volumes:
      - ./iot/mosquitto/config/:/mosquitto/config/
      - ./iot/mosquitto/data/:/mosquitto/data/ 
      - ./iot/mosquitto/log/:/mosquitto/log/
    ports:
      - '1883:1883'
    healthcheck:
      test: ["CMD-SHELL", "mosquitto_sub -p 1885 -t '$$SYS/#' -C 1 | grep -v Error || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 6

  react:
    image: node:16.13.2-slim
    container_name: react
    # restart: always
    tty: true
    volumes:
      - .frontend/my-app:/workspace
    working_dir: /workspace
    stdin_open: true
    ports:
      - "3001:3001"
    environment:
      BACKEND_HOST: ${EXPRESS_HOST}
      BACKEND_PORT: ${EXPRESS_PORT}
      REACT_APP_EMAILJS_SERVISE: ${REACT_APP_EMAILJS_SERVISE}
      REACT_APP_EMAILJS_TEMPLATE: ${REACT_APP_EMAILJS_TEMPLATE}
      REACT_APP_EMAILJS_OWNER: ${REACT_APP_EMAILJS_OWNER}
    command: sh -c "npm install && npm start"